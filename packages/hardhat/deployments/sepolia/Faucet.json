{
  "address": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_whitelistedAddresses",
          "type": "address[]"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "FaucetStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "WhitelistUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_relayer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "WithdrawAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addToWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dailyLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "faucetActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastWithdrawTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeFromWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "requestWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toggleFaucetStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newLimit",
          "type": "uint256"
        }
      ],
      "name": "updateDailyLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newLimit",
          "type": "uint256"
        }
      ],
      "name": "updateTotalLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newFrequency",
          "type": "uint256"
        }
      ],
      "name": "updateWithdrawFrequency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFrequency",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
  "receipt": {
    "to": null,
    "from": "0x4b4953FC1D985333E34Fe65Ceb985BeC3d703227",
    "contractAddress": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
    "transactionIndex": 208,
    "gasUsed": "1211518",
    "logsBloom": "0x
    "blockHash": "0xa90cacc22b10a7e9cdbdaf21b48929ca104745b385d2e93783631dd30a23e2c9",
    "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
    "logs": [
      {
        "transactionIndex": 208,
        "blockNumber": 7178706,
        "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
        "address": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
        "topics": [
          "0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
          "0x0000000000000000000000004b4953fc1d985333e34fe65ceb985bec3d703227"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 96,
        "blockHash": "0xa90cacc22b10a7e9cdbdaf21b48929ca104745b385d2e93783631dd30a23e2c9"
      },
      {
        "transactionIndex": 208,
        "blockNumber": 7178706,
        "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
        "address": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
        "topics": [
          "0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
          "0x000000000000000000000000e2a9c5427bdf96f206886742dd930154a8eb1b04"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 97,
        "blockHash": "0xa90cacc22b10a7e9cdbdaf21b48929ca104745b385d2e93783631dd30a23e2c9"
      },
      {
        "transactionIndex": 208,
        "blockNumber": 7178706,
        "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
        "address": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
        "topics": [
          "0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
          "0x0000000000000000000000004009a7e70e45889082da81204afdb69cb0259f35"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 98,
        "blockHash": "0xa90cacc22b10a7e9cdbdaf21b48929ca104745b385d2e93783631dd30a23e2c9"
      },
      {
        "transactionIndex": 208,
        "blockNumber": 7178706,
        "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
        "address": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
        "topics": [
          "0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
          "0x00000000000000000000000012ca64475ba6f1f2d3bd535e047c577195a24dce"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 99,
        "blockHash": "0xa90cacc22b10a7e9cdbdaf21b48929ca104745b385d2e93783631dd30a23e2c9"
      },
      {
        "transactionIndex": 208,
        "blockNumber": 7178706,
        "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
        "address": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
        "topics": [
          "0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
          "0x00000000000000000000000060c3e9b34c9c51279f94a59bfc46eb2e066a75f1"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 100,
        "blockHash": "0xa90cacc22b10a7e9cdbdaf21b48929ca104745b385d2e93783631dd30a23e2c9"
      },
      {
        "transactionIndex": 208,
        "blockNumber": 7178706,
        "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
        "address": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
        "topics": [
          "0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
          "0x000000000000000000000000a2ea59ad9bf06f2a31f4da2c847657582cdb0adb"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 101,
        "blockHash": "0xa90cacc22b10a7e9cdbdaf21b48929ca104745b385d2e93783631dd30a23e2c9"
      },
      {
        "transactionIndex": 208,
        "blockNumber": 7178706,
        "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
        "address": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
        "topics": [
          "0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
          "0x0000000000000000000000003624fbcb64db0e91ca4244fe19efb6c9c20ec49a"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 102,
        "blockHash": "0xa90cacc22b10a7e9cdbdaf21b48929ca104745b385d2e93783631dd30a23e2c9"
      },
      {
        "transactionIndex": 208,
        "blockNumber": 7178706,
        "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
        "address": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
        "topics": [
          "0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
          "0x000000000000000000000000dc4ae3b509723b9d3a01a81c1b377e597bb008d3"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 103,
        "blockHash": "0xa90cacc22b10a7e9cdbdaf21b48929ca104745b385d2e93783631dd30a23e2c9"
      },
      {
        "transactionIndex": 208,
        "blockNumber": 7178706,
        "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
        "address": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
        "topics": [
          "0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
          "0x0000000000000000000000008fa5b9265e3fbe770b9889dce7e2dfa085d41823"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 104,
        "blockHash": "0xa90cacc22b10a7e9cdbdaf21b48929ca104745b385d2e93783631dd30a23e2c9"
      },
      {
        "transactionIndex": 208,
        "blockNumber": 7178706,
        "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
        "address": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
        "topics": [
          "0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
          "0x000000000000000000000000f73a7f55ed244ee600f1c2252f8a4014dcc52d48"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 105,
        "blockHash": "0xa90cacc22b10a7e9cdbdaf21b48929ca104745b385d2e93783631dd30a23e2c9"
      },
      {
        "transactionIndex": 208,
        "blockNumber": 7178706,
        "transactionHash": "0x4be78684d34a674506727510b9d9da25ce4cd9798ba943bf0ab2860be08415c0",
        "address": "0x3d222B2fAC83DCb2A5E6a2De7e086E0103C6E351",
        "topics": [
          "0xf93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d",
          "0x00000000000000000000000003f01f4fddd63dc18069f2337a874ec7ae3352e6"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000001",
        "logIndex": 106,
        "blockHash": "0xa90cacc22b10a7e9cdbdaf21b48929ca104745b385d2e93783631dd30a23e2c9"
      }
    ],
    "blockNumber": 7178706,
    "cumulativeGasUsed": "21849183",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x4b4953FC1D985333E34Fe65Ceb985BeC3d703227",
      "0xE2A9c5427BDf96F206886742DD930154A8eB1b04",
      "0x4009a7E70e45889082da81204AFDb69CB0259f35",
      "0x12cA64475BA6F1F2d3bd535E047c577195a24Dce",
      "0x60C3E9b34C9C51279f94A59bFc46eB2E066a75f1",
      "0xa2Ea59Ad9bF06F2a31F4DA2C847657582cdB0Adb",
      "0x3624fBcb64Db0e91cA4244fe19EFb6C9c20ec49a",
      "0xdC4AE3B509723B9D3A01a81c1b377e597bb008d3",
      "0x8fa5B9265E3Fbe770b9889DcE7e2dFA085D41823",
      "0xf73A7F55ED244EE600F1c2252F8A4014dcC52d48",
      "0x03F01F4FddD63DC18069F2337a874Ec7Ae3352E6"
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "48662bed750f18505d68db93e1c0858f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_whitelistedAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"FaucetStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"WhitelistUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"WithdrawAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucetActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastWithdrawTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"requestWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleFaucetStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLimit\",\"type\":\"uint256\"}],\"name\":\"updateDailyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newLimit\",\"type\":\"uint256\"}],\"name\":\"updateTotalLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFrequency\",\"type\":\"uint256\"}],\"name\":\"updateWithdrawFrequency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFrequency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/Faucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\ncontract Faucet is ReentrancyGuard {\\n\\n\\taddress public owner;\\n\\tuint256 public dailyLimit;\\n\\tuint256 public totalLimit;\\n\\tbool public faucetActive = true;\\n\\n\\tmapping(address => uint256) public totalWithdrawn;\\n\\tmapping(address => uint256) public lastWithdrawTime;\\n\\tuint256 public withdrawFrequency;\\n\\tmapping(address => bool) public whitelist;\\n\\n\\t// Events for logging actions in the contract\\n\\tevent WhitelistUpdated(address indexed _address, bool _status);\\n\\tevent Withdrawal(address indexed _user, uint256 _amount);\\n\\tevent WithdrawAll(address indexed _relayer, uint256 _balance);\\n\\tevent OwnershipTransferred(\\n\\t\\taddress indexed previousOwner,\\n\\t\\taddress indexed newOwner\\n\\t);\\n\\tevent FaucetStatusUpdated(bool active);\\n\\n\\t// Modifier to restrict access to the owner only\\n\\tmodifier onlyOwner() {\\n\\t\\trequire(msg.sender == owner, \\\"No eres el propietario\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t// Modifier to restrict access to whitelisted addresses only\\n\\tmodifier onlyWhitelisted() {\\n\\t\\trequire(whitelist[msg.sender], \\\"Address no esta en lista blanca\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t// Modifier to check if the faucet is active\\n\\tmodifier faucetIsActive() {\\n\\t\\trequire(faucetActive, \\\"El faucet se encuentra inactivo\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\t// Constructor to set the contract deployer as the owner\\n\\tconstructor(address[] memory _whitelistedAddresses) payable {\\n\\t\\tdailyLimit = 0.05 ether;\\n\\t\\ttotalLimit = 0.5 ether;\\n\\t\\twithdrawFrequency = 24 hours;\\n\\t\\towner = msg.sender;\\n\\t\\tfor (uint256 i = 0; i < _whitelistedAddresses.length; i++) {\\n\\t\\t\\taddToWhitelist(_whitelistedAddresses[i]);\\n\\t\\t}\\n\\t}\\n\\n\\t// Function to add an address to the whitelist, only callable by the owner\\n\\tfunction addToWhitelist(address _address) public onlyOwner {\\n\\t\\twhitelist[_address] = true;\\n\\t\\temit WhitelistUpdated(_address, true);\\n\\t}\\n\\n\\t// Function to remove an address from the whitelist, only callable by the owner\\n\\tfunction removeFromWhitelist(address _address) external onlyOwner {\\n\\t\\twhitelist[_address] = false;\\n\\t\\temit WhitelistUpdated(_address, false);\\n\\t}\\n\\n\\t// Function to deposit ETH into the contract, only callable by the owner\\n\\tfunction deposit() external payable onlyOwner {}\\n\\n\\t// Function to allow a third party (relayer) to request withdrawal on behalf of a user\\n\\tfunction requestWithdraw(\\n\\t\\taddress _user,\\n\\t\\tuint256 _amount\\n\\t) external onlyWhitelisted nonReentrant faucetIsActive {\\n\\t\\trequire(_amount <= dailyLimit, \\\"Ha excedido el monto diario\\\");\\n\\t\\trequire(\\n\\t\\t\\ttotalWithdrawn[_user] + _amount <= totalLimit,\\n\\t\\t\\t\\\"Ha excedido el limite total\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tblock.timestamp - lastWithdrawTime[_user] >= withdrawFrequency,\\n\\t\\t\\t\\\"Retiros solo permitidos en base al limite diario\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\taddress(this).balance >= _amount,\\n\\t\\t\\t\\\"No hay fondos suficientes en el faucet\\\"\\n\\t\\t);\\n\\n\\t\\ttotalWithdrawn[_user] += _amount;\\n\\t\\tlastWithdrawTime[_user] = block.timestamp;\\n\\n\\t\\t// Transfer ETH to the user\\n\\t\\t(bool success, ) = _user.call{ value: _amount }(\\\"\\\");\\n\\t\\trequire(success, \\\"Transferencia fallida\\\");\\n\\n\\t\\temit Withdrawal(_user, _amount);\\n\\t}\\n\\n\\t// Function to allow whitelisted addresses to withdraw the entire balance of the faucet\\n\\tfunction withdrawAll()\\n\\t\\texternal\\n\\t\\tonlyWhitelisted\\n\\t\\tnonReentrant\\n\\t\\tfaucetIsActive\\n\\t{\\n\\t\\tuint256 balance = address(this).balance;\\n\\t\\trequire(balance > 0, \\\"No hay fondos para retirar\\\");\\n\\n\\t\\t// Transfer entire balance to the contract owner\\n\\t\\t(bool success, ) = owner.call{ value: balance }(\\\"\\\");\\n\\t\\trequire(success, \\\"Transferencia fallida\\\");\\n\\n\\t\\temit WithdrawAll(msg.sender, balance);\\n\\t}\\n\\n\\t// Function to transfer ownership of the contract to a new owner\\n\\tfunction transferOwnership(address newOwner) external onlyOwner {\\n\\t\\trequire(\\n\\t\\t\\tnewOwner != address(0),\\n\\t\\t\\t\\\"Nuevo propietario no puede ser address 0\\\"\\n\\t\\t);\\n\\t\\temit OwnershipTransferred(owner, newOwner);\\n\\t\\towner = newOwner;\\n\\t}\\n\\n\\t// Function to update daily limit, only callable by the owner\\n\\tfunction updateDailyLimit(uint256 _newLimit) external onlyOwner {\\n\\t\\tdailyLimit = _newLimit;\\n\\t}\\n\\n\\t// Function to update total limit, only callable by the owner\\n\\tfunction updateTotalLimit(uint256 _newLimit) external onlyOwner {\\n\\t\\ttotalLimit = _newLimit;\\n\\t}\\n\\n\\t// Function to update withdraw frequency, only callable by the owner\\n\\tfunction updateWithdrawFrequency(uint256 _newFrequency) external onlyOwner {\\n\\t\\twithdrawFrequency = _newFrequency;\\n\\t}\\n\\n\\t// Function to activate or deactivate the faucet, only callable by the owner\\n\\tfunction toggleFaucetStatus() external onlyOwner {\\n\\t\\tfaucetActive = !faucetActive;\\n\\t\\temit FaucetStatusUpdated(faucetActive);\\n\\t}\\n\\n\\t// Function to get the current balance of the contract\\n\\tfunction getBalance() external view returns (uint256) {\\n\\t\\treturn address(this).balance;\\n\\t}\\n\\n\\t// Fallback function to receive ETH directly\\n\\treceive() external payable {}\\n}\\n\",\"keccak256\":\"0x4f317bc02f37fa272fd523e4465f54024480c8605678e3c2d300bab54c8c7594\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101185760003560e01c8063853828b6116100a0578063a36298c711610064578063a36298c71461030e578063d0e30db014610324578063e43252d71461032c578063f2fde38b1461034c578063f8175d781461036c57600080fd5b8063853828b6146102475780638ab1d6811461025c5780638da5cb5b1461027c57806390559584146102b45780639b19251a146102de57600080fd5b8063397a1b28116100e7578063397a1b28146101ba578063416053aa146101dc5780634eb8b061146101f1578063672a5ff71461021157806367eeba0c1461023157600080fd5b80630a64143a146101245780631031ec311461016457806312065fe014610191578063258aa43b146101a457600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5061015161013f366004610c6b565b60056020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561017057600080fd5b5061015161017f366004610c6b565b60066020526000908152604090205481565b34801561019d57600080fd5b5047610151565b3480156101b057600080fd5b5061015160075481565b3480156101c657600080fd5b506101da6101d5366004610c8d565b61038c565b005b3480156101e857600080fd5b506101da610724565b3480156101fd57600080fd5b506101da61020c366004610cb7565b61079b565b34801561021d57600080fd5b506101da61022c366004610cb7565b6107ca565b34801561023d57600080fd5b5061015160025481565b34801561025357600080fd5b506101da6107f9565b34801561026857600080fd5b506101da610277366004610c6b565b6109de565b34801561028857600080fd5b5060015461029c906001600160a01b031681565b6040516001600160a01b03909116815260200161015b565b3480156102c057600080fd5b506004546102ce9060ff1681565b604051901515815260200161015b565b3480156102ea57600080fd5b506102ce6102f9366004610c6b565b60086020526000908152604090205460ff1681565b34801561031a57600080fd5b5061015160035481565b6101da610a5e565b34801561033857600080fd5b506101da610347366004610c6b565b610a88565b34801561035857600080fd5b506101da610367366004610c6b565b610b09565b34801561037857600080fd5b506101da610387366004610cb7565b610bf6565b3360009081526008602052604090205460ff166103f05760405162461bcd60e51b815260206004820152601f60248201527f41646472657373206e6f206573746120656e206c6973746120626c616e63610060448201526064015b60405180910390fd5b6103f8610c25565b60045460ff1661044a5760405162461bcd60e51b815260206004820152601f60248201527f456c2066617563657420736520656e6375656e74726120696e61637469766f0060448201526064016103e7565b60025481111561049c5760405162461bcd60e51b815260206004820152601b60248201527f486120657863656469646f20656c206d6f6e746f2064696172696f000000000060448201526064016103e7565b6003546001600160a01b0383166000908152600560205260409020546104c3908390610ce6565b11156105115760405162461bcd60e51b815260206004820152601b60248201527f486120657863656469646f20656c206c696d69746520746f74616c000000000060448201526064016103e7565b6007546001600160a01b0383166000908152600660205260409020546105379042610cff565b101561059e5760405162461bcd60e51b815260206004820152603060248201527f52657469726f7320736f6c6f207065726d697469646f7320656e20626173652060448201526f616c206c696d6974652064696172696f60801b60648201526084016103e7565b804710156105fd5760405162461bcd60e51b815260206004820152602660248201527f4e6f2068617920666f6e646f7320737566696369656e74657320656e20656c2060448201526519985d58d95d60d21b60648201526084016103e7565b6001600160a01b03821660009081526005602052604081208054839290610625908490610ce6565b90915550506001600160a01b0382166000818152600660205260408082204290555190919083908381818185875af1925050503d8060008114610684576040519150601f19603f3d011682016040523d82523d6000602084013e610689565b606091505b50509050806106d25760405162461bcd60e51b81526020600482015260156024820152745472616e73666572656e6369612066616c6c69646160581b60448201526064016103e7565b826001600160a01b03167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b658360405161070d91815260200190565b60405180910390a2506107206001600055565b5050565b6001546001600160a01b0316331461074e5760405162461bcd60e51b81526004016103e790610d12565b6004805460ff8082161560ff1990921682179092556040519116151581527f4099d2ed1eb5de070fdf071f999caa3e5860d56b69fd3a5105c3e162add217679060200160405180910390a1565b6001546001600160a01b031633146107c55760405162461bcd60e51b81526004016103e790610d12565b600355565b6001546001600160a01b031633146107f45760405162461bcd60e51b81526004016103e790610d12565b600755565b3360009081526008602052604090205460ff166108585760405162461bcd60e51b815260206004820152601f60248201527f41646472657373206e6f206573746120656e206c6973746120626c616e63610060448201526064016103e7565b610860610c25565b60045460ff166108b25760405162461bcd60e51b815260206004820152601f60248201527f456c2066617563657420736520656e6375656e74726120696e61637469766f0060448201526064016103e7565b47806109005760405162461bcd60e51b815260206004820152601a60248201527f4e6f2068617920666f6e646f732070617261207265746972617200000000000060448201526064016103e7565b6001546040516000916001600160a01b03169083908381818185875af1925050503d806000811461094d576040519150601f19603f3d011682016040523d82523d6000602084013e610952565b606091505b505090508061099b5760405162461bcd60e51b81526020600482015260156024820152745472616e73666572656e6369612066616c6c69646160581b60448201526064016103e7565b60405182815233907fd7a4aa9f3dca5f6606ac15d7e1850920201bbb02c38cd986793779f58ae0dfd39060200160405180910390a250506109dc6001600055565b565b6001546001600160a01b03163314610a085760405162461bcd60e51b81526004016103e790610d12565b6001600160a01b0381166000818152600860209081526040808320805460ff19169055519182527ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d91015b60405180910390a250565b6001546001600160a01b031633146109dc5760405162461bcd60e51b81526004016103e790610d12565b6001546001600160a01b03163314610ab25760405162461bcd60e51b81526004016103e790610d12565b6001600160a01b038116600081815260086020908152604091829020805460ff1916600190811790915591519182527ff93f9a76c1bf3444d22400a00cb9fe990e6abe9dbb333fda48859cfee864543d9101610a53565b6001546001600160a01b03163314610b335760405162461bcd60e51b81526004016103e790610d12565b6001600160a01b038116610b9a5760405162461bcd60e51b815260206004820152602860248201527f4e7565766f2070726f706965746172696f206e6f207075656465207365722061604482015267064647265737320360c41b60648201526084016103e7565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610c205760405162461bcd60e51b81526004016103e790610d12565b600255565b600260005403610c4857604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b80356001600160a01b0381168114610c6657600080fd5b919050565b600060208284031215610c7d57600080fd5b610c8682610c4f565b9392505050565b60008060408385031215610ca057600080fd5b610ca983610c4f565b946020939093013593505050565b600060208284031215610cc957600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610cf957610cf9610cd0565b92915050565b81810381811115610cf957610cf9610cd0565b6020808252601690820152754e6f206572657320656c2070726f706965746172696f60501b60408201526060019056fea2646970667358221220543959d6e0dce8afd31115b9fb186d3edc89a51a8ed9ecb8f3a4804af219025c64736f6c63430008140033",
  "devdoc": {
    "errors": {
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 75,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 77,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "dailyLimit",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 79,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "totalLimit",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 82,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "faucetActive",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 86,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "totalWithdrawn",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 90,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "lastWithdrawTime",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 92,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "withdrawFrequency",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 96,
        "contract": "contracts/Faucet.sol:Faucet",
        "label": "whitelist",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}